// Generated from D:/Code/riddle-ts/RiddleLexer.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class RiddleLexer extends Lexer {
	public static readonly Var = 1;
	public static readonly Val = 2;
	public static readonly For = 3;
	public static readonly While = 4;
	public static readonly Continue = 5;
	public static readonly Break = 6;
	public static readonly If = 7;
	public static readonly Else = 8;
	public static readonly Func = 9;
	public static readonly Return = 10;
	public static readonly Import = 11;
	public static readonly Package = 12;
	public static readonly Class = 13;
	public static readonly True = 14;
	public static readonly False = 15;
	public static readonly Null = 16;
	public static readonly Try = 17;
	public static readonly Catch = 18;
	public static readonly Override = 19;
	public static readonly Static = 20;
	public static readonly Const = 21;
	public static readonly Public = 22;
	public static readonly Protected = 23;
	public static readonly Private = 24;
	public static readonly Virtual = 25;
	public static readonly Operator = 26;
	public static readonly LeftBracket = 27;
	public static readonly RightBracket = 28;
	public static readonly LeftSquare = 29;
	public static readonly RightSquare = 30;
	public static readonly LeftCurly = 31;
	public static readonly RightCurly = 32;
	public static readonly Colon = 33;
	public static readonly Semi = 34;
	public static readonly Comma = 35;
	public static readonly Equal = 36;
	public static readonly NotEqual = 37;
	public static readonly Assign = 38;
	public static readonly Greater = 39;
	public static readonly GreaterEqual = 40;
	public static readonly Less = 41;
	public static readonly LessEqual = 42;
	public static readonly LeftShift = 43;
	public static readonly RightShift = 44;
	public static readonly Add = 45;
	public static readonly Sub = 46;
	public static readonly Star = 47;
	public static readonly Div = 48;
	public static readonly Mod = 49;
	public static readonly Not = 50;
	public static readonly And = 51;
	public static readonly Or = 52;
	public static readonly Xor = 53;
	public static readonly Dot = 54;
	public static readonly DoubleQuotes = 55;
	public static readonly Quotes = 56;
	public static readonly Tilde = 57;
	public static readonly AddAssign = 58;
	public static readonly SubAssign = 59;
	public static readonly MulAssign = 60;
	public static readonly DivAssign = 61;
	public static readonly ModAssign = 62;
	public static readonly LeftShiftAssign = 63;
	public static readonly RightShiftAssign = 64;
	public static readonly AndAssign = 65;
	public static readonly OrAssign = 66;
	public static readonly XorAssign = 67;
	public static readonly Endl = 68;
	public static readonly Identifier = 69;
	public static readonly Hexadecimal = 70;
	public static readonly Decimal = 71;
	public static readonly Octal = 72;
	public static readonly Binary = 73;
	public static readonly Float = 74;
	public static readonly IntegerSequence = 75;
	public static readonly HEX_DIGIT = 76;
	public static readonly OCTAL_DIGIT = 77;
	public static readonly BINARY_DIGIT = 78;
	public static readonly DIGIT = 79;
	public static readonly STRING = 80;
	public static readonly CHAR = 81;
	public static readonly LINE_COMMENT = 82;
	public static readonly BLOCK_COMMENT = 83;
	public static readonly WHITESPACE = 84;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'var'", 
                                                            "'val'", "'for'", 
                                                            "'while'", "'continue'", 
                                                            "'break'", "'if'", 
                                                            "'else'", "'fun'", 
                                                            "'return'", 
                                                            "'import'", 
                                                            "'package'", 
                                                            "'class'", "'true'", 
                                                            "'false'", "'null'", 
                                                            "'try'", "'catch'", 
                                                            "'override'", 
                                                            "'static'", 
                                                            "'const'", "'public'", 
                                                            "'protected'", 
                                                            "'private'", 
                                                            "'virtual'", 
                                                            "'operator'", 
                                                            "'('", "')'", 
                                                            "'['", "']'", 
                                                            "'{'", "'}'", 
                                                            "':'", "';'", 
                                                            "','", "'=='", 
                                                            "'!='", "'='", 
                                                            "'>'", "'>='", 
                                                            "'<'", "'<='", 
                                                            "'<<'", "'>>'", 
                                                            "'+'", "'-'", 
                                                            "'*'", "'/'", 
                                                            "'%'", "'!'", 
                                                            "'&'", "'|'", 
                                                            "'^'", "'.'", 
                                                            "'\"'", "'''", 
                                                            "'~'", "'+='", 
                                                            "'-='", "'*='", 
                                                            "'/='", "'%='", 
                                                            "'<<='", "'>>='", 
                                                            "'&='", "'|='", 
                                                            "'^='", "'\\n'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "Var", 
                                                             "Val", "For", 
                                                             "While", "Continue", 
                                                             "Break", "If", 
                                                             "Else", "Func", 
                                                             "Return", "Import", 
                                                             "Package", 
                                                             "Class", "True", 
                                                             "False", "Null", 
                                                             "Try", "Catch", 
                                                             "Override", 
                                                             "Static", "Const", 
                                                             "Public", "Protected", 
                                                             "Private", 
                                                             "Virtual", 
                                                             "Operator", 
                                                             "LeftBracket", 
                                                             "RightBracket", 
                                                             "LeftSquare", 
                                                             "RightSquare", 
                                                             "LeftCurly", 
                                                             "RightCurly", 
                                                             "Colon", "Semi", 
                                                             "Comma", "Equal", 
                                                             "NotEqual", 
                                                             "Assign", "Greater", 
                                                             "GreaterEqual", 
                                                             "Less", "LessEqual", 
                                                             "LeftShift", 
                                                             "RightShift", 
                                                             "Add", "Sub", 
                                                             "Star", "Div", 
                                                             "Mod", "Not", 
                                                             "And", "Or", 
                                                             "Xor", "Dot", 
                                                             "DoubleQuotes", 
                                                             "Quotes", "Tilde", 
                                                             "AddAssign", 
                                                             "SubAssign", 
                                                             "MulAssign", 
                                                             "DivAssign", 
                                                             "ModAssign", 
                                                             "LeftShiftAssign", 
                                                             "RightShiftAssign", 
                                                             "AndAssign", 
                                                             "OrAssign", 
                                                             "XorAssign", 
                                                             "Endl", "Identifier", 
                                                             "Hexadecimal", 
                                                             "Decimal", 
                                                             "Octal", "Binary", 
                                                             "Float", "IntegerSequence", 
                                                             "HEX_DIGIT", 
                                                             "OCTAL_DIGIT", 
                                                             "BINARY_DIGIT", 
                                                             "DIGIT", "STRING", 
                                                             "CHAR", "LINE_COMMENT", 
                                                             "BLOCK_COMMENT", 
                                                             "WHITESPACE" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"Var", "Val", "For", "While", "Continue", "Break", "If", "Else", "Func", 
		"Return", "Import", "Package", "Class", "True", "False", "Null", "Try", 
		"Catch", "Override", "Static", "Const", "Public", "Protected", "Private", 
		"Virtual", "Operator", "LeftBracket", "RightBracket", "LeftSquare", "RightSquare", 
		"LeftCurly", "RightCurly", "Colon", "Semi", "Comma", "Equal", "NotEqual", 
		"Assign", "Greater", "GreaterEqual", "Less", "LessEqual", "LeftShift", 
		"RightShift", "Add", "Sub", "Star", "Div", "Mod", "Not", "And", "Or", 
		"Xor", "Dot", "DoubleQuotes", "Quotes", "Tilde", "AddAssign", "SubAssign", 
		"MulAssign", "DivAssign", "ModAssign", "LeftShiftAssign", "RightShiftAssign", 
		"AndAssign", "OrAssign", "XorAssign", "Endl", "Identifier", "Hexadecimal", 
		"Decimal", "Octal", "Binary", "Float", "IntegerSequence", "HEX_DIGIT", 
		"OCTAL_DIGIT", "BINARY_DIGIT", "DIGIT", "STRING", "CHAR", "ESC", "LINE_COMMENT", 
		"BLOCK_COMMENT", "WHITESPACE",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, RiddleLexer._ATN, RiddleLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "RiddleLexer.g4"; }

	public get literalNames(): (string | null)[] { return RiddleLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return RiddleLexer.symbolicNames; }
	public get ruleNames(): string[] { return RiddleLexer.ruleNames; }

	public get serializedATN(): number[] { return RiddleLexer._serializedATN; }

	public get channelNames(): string[] { return RiddleLexer.channelNames; }

	public get modeNames(): string[] { return RiddleLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,84,551,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,
	2,82,7,82,2,83,7,83,2,84,7,84,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,
	2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,
	5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,
	9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
	1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,
	13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
	1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,
	18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
	1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
	1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
	26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,
	1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,
	39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,
	1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,
	52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,57,1,58,1,58,
	1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,
	63,1,63,1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,
	1,68,1,68,5,68,439,8,68,10,68,12,68,442,9,68,1,69,1,69,1,69,1,69,1,69,5,
	69,449,8,69,10,69,12,69,452,9,69,1,70,1,70,1,70,5,70,457,8,70,10,70,12,
	70,460,9,70,3,70,462,8,70,1,71,1,71,1,71,5,71,467,8,71,10,71,12,71,470,
	9,71,1,72,1,72,1,72,1,72,1,72,5,72,477,8,72,10,72,12,72,480,9,72,1,73,1,
	73,1,73,1,73,1,74,4,74,487,8,74,11,74,12,74,488,1,75,1,75,1,76,1,76,1,77,
	1,77,1,78,1,78,1,79,1,79,1,79,5,79,502,8,79,10,79,12,79,505,9,79,1,79,1,
	79,1,80,1,80,1,80,3,80,512,8,80,1,80,1,80,1,81,1,81,3,81,518,8,81,1,82,
	1,82,1,82,1,82,5,82,524,8,82,10,82,12,82,527,9,82,1,82,1,82,1,83,1,83,1,
	83,1,83,5,83,535,8,83,10,83,12,83,538,9,83,1,83,1,83,1,83,1,83,1,83,1,84,
	4,84,546,8,84,11,84,12,84,547,1,84,1,84,1,536,0,85,1,1,3,2,5,3,7,4,9,5,
	11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
	18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
	30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
	42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
	107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,
	64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,
	149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,0,165,82,167,83,169,
	84,1,0,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,49,57,
	65,70,1,0,49,57,1,0,49,55,2,0,48,57,65,70,1,0,48,55,1,0,48,49,1,0,48,57,
	4,0,10,10,13,13,34,34,92,92,5,0,34,34,47,47,65,90,92,92,97,122,2,0,10,10,
	13,13,3,0,9,10,13,13,32,32,562,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
	1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
	0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
	0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
	0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
	0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,
	0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,
	0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,
	0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
	0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
	0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
	0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
	127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,
	1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
	0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,
	0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,
	0,1,171,1,0,0,0,3,175,1,0,0,0,5,179,1,0,0,0,7,183,1,0,0,0,9,189,1,0,0,0,
	11,198,1,0,0,0,13,204,1,0,0,0,15,207,1,0,0,0,17,212,1,0,0,0,19,216,1,0,
	0,0,21,223,1,0,0,0,23,230,1,0,0,0,25,238,1,0,0,0,27,244,1,0,0,0,29,249,
	1,0,0,0,31,255,1,0,0,0,33,260,1,0,0,0,35,264,1,0,0,0,37,270,1,0,0,0,39,
	279,1,0,0,0,41,286,1,0,0,0,43,292,1,0,0,0,45,299,1,0,0,0,47,309,1,0,0,0,
	49,317,1,0,0,0,51,325,1,0,0,0,53,334,1,0,0,0,55,336,1,0,0,0,57,338,1,0,
	0,0,59,340,1,0,0,0,61,342,1,0,0,0,63,344,1,0,0,0,65,346,1,0,0,0,67,348,
	1,0,0,0,69,350,1,0,0,0,71,352,1,0,0,0,73,355,1,0,0,0,75,358,1,0,0,0,77,
	360,1,0,0,0,79,362,1,0,0,0,81,365,1,0,0,0,83,367,1,0,0,0,85,370,1,0,0,0,
	87,373,1,0,0,0,89,376,1,0,0,0,91,378,1,0,0,0,93,380,1,0,0,0,95,382,1,0,
	0,0,97,384,1,0,0,0,99,386,1,0,0,0,101,388,1,0,0,0,103,390,1,0,0,0,105,392,
	1,0,0,0,107,394,1,0,0,0,109,396,1,0,0,0,111,398,1,0,0,0,113,400,1,0,0,0,
	115,402,1,0,0,0,117,405,1,0,0,0,119,408,1,0,0,0,121,411,1,0,0,0,123,414,
	1,0,0,0,125,417,1,0,0,0,127,421,1,0,0,0,129,425,1,0,0,0,131,428,1,0,0,0,
	133,431,1,0,0,0,135,434,1,0,0,0,137,436,1,0,0,0,139,443,1,0,0,0,141,461,
	1,0,0,0,143,463,1,0,0,0,145,471,1,0,0,0,147,481,1,0,0,0,149,486,1,0,0,0,
	151,490,1,0,0,0,153,492,1,0,0,0,155,494,1,0,0,0,157,496,1,0,0,0,159,498,
	1,0,0,0,161,508,1,0,0,0,163,515,1,0,0,0,165,519,1,0,0,0,167,530,1,0,0,0,
	169,545,1,0,0,0,171,172,5,118,0,0,172,173,5,97,0,0,173,174,5,114,0,0,174,
	2,1,0,0,0,175,176,5,118,0,0,176,177,5,97,0,0,177,178,5,108,0,0,178,4,1,
	0,0,0,179,180,5,102,0,0,180,181,5,111,0,0,181,182,5,114,0,0,182,6,1,0,0,
	0,183,184,5,119,0,0,184,185,5,104,0,0,185,186,5,105,0,0,186,187,5,108,0,
	0,187,188,5,101,0,0,188,8,1,0,0,0,189,190,5,99,0,0,190,191,5,111,0,0,191,
	192,5,110,0,0,192,193,5,116,0,0,193,194,5,105,0,0,194,195,5,110,0,0,195,
	196,5,117,0,0,196,197,5,101,0,0,197,10,1,0,0,0,198,199,5,98,0,0,199,200,
	5,114,0,0,200,201,5,101,0,0,201,202,5,97,0,0,202,203,5,107,0,0,203,12,1,
	0,0,0,204,205,5,105,0,0,205,206,5,102,0,0,206,14,1,0,0,0,207,208,5,101,
	0,0,208,209,5,108,0,0,209,210,5,115,0,0,210,211,5,101,0,0,211,16,1,0,0,
	0,212,213,5,102,0,0,213,214,5,117,0,0,214,215,5,110,0,0,215,18,1,0,0,0,
	216,217,5,114,0,0,217,218,5,101,0,0,218,219,5,116,0,0,219,220,5,117,0,0,
	220,221,5,114,0,0,221,222,5,110,0,0,222,20,1,0,0,0,223,224,5,105,0,0,224,
	225,5,109,0,0,225,226,5,112,0,0,226,227,5,111,0,0,227,228,5,114,0,0,228,
	229,5,116,0,0,229,22,1,0,0,0,230,231,5,112,0,0,231,232,5,97,0,0,232,233,
	5,99,0,0,233,234,5,107,0,0,234,235,5,97,0,0,235,236,5,103,0,0,236,237,5,
	101,0,0,237,24,1,0,0,0,238,239,5,99,0,0,239,240,5,108,0,0,240,241,5,97,
	0,0,241,242,5,115,0,0,242,243,5,115,0,0,243,26,1,0,0,0,244,245,5,116,0,
	0,245,246,5,114,0,0,246,247,5,117,0,0,247,248,5,101,0,0,248,28,1,0,0,0,
	249,250,5,102,0,0,250,251,5,97,0,0,251,252,5,108,0,0,252,253,5,115,0,0,
	253,254,5,101,0,0,254,30,1,0,0,0,255,256,5,110,0,0,256,257,5,117,0,0,257,
	258,5,108,0,0,258,259,5,108,0,0,259,32,1,0,0,0,260,261,5,116,0,0,261,262,
	5,114,0,0,262,263,5,121,0,0,263,34,1,0,0,0,264,265,5,99,0,0,265,266,5,97,
	0,0,266,267,5,116,0,0,267,268,5,99,0,0,268,269,5,104,0,0,269,36,1,0,0,0,
	270,271,5,111,0,0,271,272,5,118,0,0,272,273,5,101,0,0,273,274,5,114,0,0,
	274,275,5,114,0,0,275,276,5,105,0,0,276,277,5,100,0,0,277,278,5,101,0,0,
	278,38,1,0,0,0,279,280,5,115,0,0,280,281,5,116,0,0,281,282,5,97,0,0,282,
	283,5,116,0,0,283,284,5,105,0,0,284,285,5,99,0,0,285,40,1,0,0,0,286,287,
	5,99,0,0,287,288,5,111,0,0,288,289,5,110,0,0,289,290,5,115,0,0,290,291,
	5,116,0,0,291,42,1,0,0,0,292,293,5,112,0,0,293,294,5,117,0,0,294,295,5,
	98,0,0,295,296,5,108,0,0,296,297,5,105,0,0,297,298,5,99,0,0,298,44,1,0,
	0,0,299,300,5,112,0,0,300,301,5,114,0,0,301,302,5,111,0,0,302,303,5,116,
	0,0,303,304,5,101,0,0,304,305,5,99,0,0,305,306,5,116,0,0,306,307,5,101,
	0,0,307,308,5,100,0,0,308,46,1,0,0,0,309,310,5,112,0,0,310,311,5,114,0,
	0,311,312,5,105,0,0,312,313,5,118,0,0,313,314,5,97,0,0,314,315,5,116,0,
	0,315,316,5,101,0,0,316,48,1,0,0,0,317,318,5,118,0,0,318,319,5,105,0,0,
	319,320,5,114,0,0,320,321,5,116,0,0,321,322,5,117,0,0,322,323,5,97,0,0,
	323,324,5,108,0,0,324,50,1,0,0,0,325,326,5,111,0,0,326,327,5,112,0,0,327,
	328,5,101,0,0,328,329,5,114,0,0,329,330,5,97,0,0,330,331,5,116,0,0,331,
	332,5,111,0,0,332,333,5,114,0,0,333,52,1,0,0,0,334,335,5,40,0,0,335,54,
	1,0,0,0,336,337,5,41,0,0,337,56,1,0,0,0,338,339,5,91,0,0,339,58,1,0,0,0,
	340,341,5,93,0,0,341,60,1,0,0,0,342,343,5,123,0,0,343,62,1,0,0,0,344,345,
	5,125,0,0,345,64,1,0,0,0,346,347,5,58,0,0,347,66,1,0,0,0,348,349,5,59,0,
	0,349,68,1,0,0,0,350,351,5,44,0,0,351,70,1,0,0,0,352,353,5,61,0,0,353,354,
	5,61,0,0,354,72,1,0,0,0,355,356,5,33,0,0,356,357,5,61,0,0,357,74,1,0,0,
	0,358,359,5,61,0,0,359,76,1,0,0,0,360,361,5,62,0,0,361,78,1,0,0,0,362,363,
	5,62,0,0,363,364,5,61,0,0,364,80,1,0,0,0,365,366,5,60,0,0,366,82,1,0,0,
	0,367,368,5,60,0,0,368,369,5,61,0,0,369,84,1,0,0,0,370,371,5,60,0,0,371,
	372,5,60,0,0,372,86,1,0,0,0,373,374,5,62,0,0,374,375,5,62,0,0,375,88,1,
	0,0,0,376,377,5,43,0,0,377,90,1,0,0,0,378,379,5,45,0,0,379,92,1,0,0,0,380,
	381,5,42,0,0,381,94,1,0,0,0,382,383,5,47,0,0,383,96,1,0,0,0,384,385,5,37,
	0,0,385,98,1,0,0,0,386,387,5,33,0,0,387,100,1,0,0,0,388,389,5,38,0,0,389,
	102,1,0,0,0,390,391,5,124,0,0,391,104,1,0,0,0,392,393,5,94,0,0,393,106,
	1,0,0,0,394,395,5,46,0,0,395,108,1,0,0,0,396,397,5,34,0,0,397,110,1,0,0,
	0,398,399,5,39,0,0,399,112,1,0,0,0,400,401,5,126,0,0,401,114,1,0,0,0,402,
	403,5,43,0,0,403,404,5,61,0,0,404,116,1,0,0,0,405,406,5,45,0,0,406,407,
	5,61,0,0,407,118,1,0,0,0,408,409,5,42,0,0,409,410,5,61,0,0,410,120,1,0,
	0,0,411,412,5,47,0,0,412,413,5,61,0,0,413,122,1,0,0,0,414,415,5,37,0,0,
	415,416,5,61,0,0,416,124,1,0,0,0,417,418,5,60,0,0,418,419,5,60,0,0,419,
	420,5,61,0,0,420,126,1,0,0,0,421,422,5,62,0,0,422,423,5,62,0,0,423,424,
	5,61,0,0,424,128,1,0,0,0,425,426,5,38,0,0,426,427,5,61,0,0,427,130,1,0,
	0,0,428,429,5,124,0,0,429,430,5,61,0,0,430,132,1,0,0,0,431,432,5,94,0,0,
	432,433,5,61,0,0,433,134,1,0,0,0,434,435,5,10,0,0,435,136,1,0,0,0,436,440,
	7,0,0,0,437,439,7,1,0,0,438,437,1,0,0,0,439,442,1,0,0,0,440,438,1,0,0,0,
	440,441,1,0,0,0,441,138,1,0,0,0,442,440,1,0,0,0,443,444,5,48,0,0,444,445,
	5,120,0,0,445,446,1,0,0,0,446,450,7,2,0,0,447,449,3,151,75,0,448,447,1,
	0,0,0,449,452,1,0,0,0,450,448,1,0,0,0,450,451,1,0,0,0,451,140,1,0,0,0,452,
	450,1,0,0,0,453,462,5,48,0,0,454,458,7,3,0,0,455,457,3,157,78,0,456,455,
	1,0,0,0,457,460,1,0,0,0,458,456,1,0,0,0,458,459,1,0,0,0,459,462,1,0,0,0,
	460,458,1,0,0,0,461,453,1,0,0,0,461,454,1,0,0,0,462,142,1,0,0,0,463,464,
	5,48,0,0,464,468,7,4,0,0,465,467,3,153,76,0,466,465,1,0,0,0,467,470,1,0,
	0,0,468,466,1,0,0,0,468,469,1,0,0,0,469,144,1,0,0,0,470,468,1,0,0,0,471,
	472,5,48,0,0,472,473,5,98,0,0,473,474,1,0,0,0,474,478,5,49,0,0,475,477,
	3,155,77,0,476,475,1,0,0,0,477,480,1,0,0,0,478,476,1,0,0,0,478,479,1,0,
	0,0,479,146,1,0,0,0,480,478,1,0,0,0,481,482,3,141,70,0,482,483,3,107,53,
	0,483,484,3,149,74,0,484,148,1,0,0,0,485,487,3,157,78,0,486,485,1,0,0,0,
	487,488,1,0,0,0,488,486,1,0,0,0,488,489,1,0,0,0,489,150,1,0,0,0,490,491,
	7,5,0,0,491,152,1,0,0,0,492,493,7,6,0,0,493,154,1,0,0,0,494,495,7,7,0,0,
	495,156,1,0,0,0,496,497,7,8,0,0,497,158,1,0,0,0,498,503,5,34,0,0,499,502,
	3,163,81,0,500,502,8,9,0,0,501,499,1,0,0,0,501,500,1,0,0,0,502,505,1,0,
	0,0,503,501,1,0,0,0,503,504,1,0,0,0,504,506,1,0,0,0,505,503,1,0,0,0,506,
	507,5,34,0,0,507,160,1,0,0,0,508,511,5,39,0,0,509,512,3,163,81,0,510,512,
	8,9,0,0,511,509,1,0,0,0,511,510,1,0,0,0,512,513,1,0,0,0,513,514,5,39,0,
	0,514,162,1,0,0,0,515,517,5,92,0,0,516,518,7,10,0,0,517,516,1,0,0,0,518,
	164,1,0,0,0,519,520,5,47,0,0,520,521,5,47,0,0,521,525,1,0,0,0,522,524,8,
	11,0,0,523,522,1,0,0,0,524,527,1,0,0,0,525,523,1,0,0,0,525,526,1,0,0,0,
	526,528,1,0,0,0,527,525,1,0,0,0,528,529,6,82,0,0,529,166,1,0,0,0,530,531,
	5,47,0,0,531,532,5,42,0,0,532,536,1,0,0,0,533,535,9,0,0,0,534,533,1,0,0,
	0,535,538,1,0,0,0,536,537,1,0,0,0,536,534,1,0,0,0,537,539,1,0,0,0,538,536,
	1,0,0,0,539,540,5,42,0,0,540,541,5,47,0,0,541,542,1,0,0,0,542,543,6,83,
	0,0,543,168,1,0,0,0,544,546,7,12,0,0,545,544,1,0,0,0,546,547,1,0,0,0,547,
	545,1,0,0,0,547,548,1,0,0,0,548,549,1,0,0,0,549,550,6,84,0,0,550,170,1,
	0,0,0,15,0,440,450,458,461,468,478,488,501,503,511,517,525,536,547,1,0,
	1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!RiddleLexer.__ATN) {
			RiddleLexer.__ATN = new ATNDeserializer().deserialize(RiddleLexer._serializedATN);
		}

		return RiddleLexer.__ATN;
	}


	static DecisionsToDFA = RiddleLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}